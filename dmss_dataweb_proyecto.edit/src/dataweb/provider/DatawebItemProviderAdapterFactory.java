/**
 */
package dataweb.provider;

import dataweb.util.DatawebAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITableItemLabelProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class DatawebItemProviderAdapterFactory extends DatawebAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DatawebItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
		supportedTypes.add(ITableItemLabelProvider.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Aplicacion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AplicacionItemProvider aplicacionItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Aplicacion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAplicacionAdapter() {
		if (aplicacionItemProvider == null) {
			aplicacionItemProvider = new AplicacionItemProvider(this);
		}

		return aplicacionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.BaseDatos} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseDatosItemProvider baseDatosItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.BaseDatos}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseDatosAdapter() {
		if (baseDatosItemProvider == null) {
			baseDatosItemProvider = new BaseDatosItemProvider(this);
		}

		return baseDatosItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Entidad} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntidadItemProvider entidadItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Entidad}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntidadAdapter() {
		if (entidadItemProvider == null) {
			entidadItemProvider = new EntidadItemProvider(this);
		}

		return entidadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Atributo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AtributoItemProvider atributoItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Atributo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAtributoAdapter() {
		if (atributoItemProvider == null) {
			atributoItemProvider = new AtributoItemProvider(this);
		}

		return atributoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.CrearInstancia} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CrearInstanciaItemProvider crearInstanciaItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.CrearInstancia}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCrearInstanciaAdapter() {
		if (crearInstanciaItemProvider == null) {
			crearInstanciaItemProvider = new CrearInstanciaItemProvider(this);
		}

		return crearInstanciaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.IndiceExtendido} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndiceExtendidoItemProvider indiceExtendidoItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.IndiceExtendido}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndiceExtendidoAdapter() {
		if (indiceExtendidoItemProvider == null) {
			indiceExtendidoItemProvider = new IndiceExtendidoItemProvider(this);
		}

		return indiceExtendidoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.DetallesInstancia} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DetallesInstanciaItemProvider detallesInstanciaItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.DetallesInstancia}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDetallesInstanciaAdapter() {
		if (detallesInstanciaItemProvider == null) {
			detallesInstanciaItemProvider = new DetallesInstanciaItemProvider(this);
		}

		return detallesInstanciaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.ActualizacionInstancia} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActualizacionInstanciaItemProvider actualizacionInstanciaItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.ActualizacionInstancia}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActualizacionInstanciaAdapter() {
		if (actualizacionInstanciaItemProvider == null) {
			actualizacionInstanciaItemProvider = new ActualizacionInstanciaItemProvider(this);
		}

		return actualizacionInstanciaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.IndiceEntidad} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndiceEntidadItemProvider indiceEntidadItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.IndiceEntidad}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndiceEntidadAdapter() {
		if (indiceEntidadItemProvider == null) {
			indiceEntidadItemProvider = new IndiceEntidadItemProvider(this);
		}

		return indiceEntidadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.IndiceDetalle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndiceDetalleItemProvider indiceDetalleItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.IndiceDetalle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndiceDetalleAdapter() {
		if (indiceDetalleItemProvider == null) {
			indiceDetalleItemProvider = new IndiceDetalleItemProvider(this);
		}

		return indiceDetalleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.BorradoInstancia} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BorradoInstanciaItemProvider borradoInstanciaItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.BorradoInstancia}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBorradoInstanciaAdapter() {
		if (borradoInstanciaItemProvider == null) {
			borradoInstanciaItemProvider = new BorradoInstanciaItemProvider(this);
		}

		return borradoInstanciaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Cuestionario} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CuestionarioItemProvider cuestionarioItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Cuestionario}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCuestionarioAdapter() {
		if (cuestionarioItemProvider == null) {
			cuestionarioItemProvider = new CuestionarioItemProvider(this);
		}

		return cuestionarioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Pregunta} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PreguntaItemProvider preguntaItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Pregunta}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPreguntaAdapter() {
		if (preguntaItemProvider == null) {
			preguntaItemProvider = new PreguntaItemProvider(this);
		}

		return preguntaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Normal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NormalItemProvider normalItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Normal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNormalAdapter() {
		if (normalItemProvider == null) {
			normalItemProvider = new NormalItemProvider(this);
		}

		return normalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Encuesta} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EncuestaItemProvider encuestaItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Encuesta}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEncuestaAdapter() {
		if (encuestaItemProvider == null) {
			encuestaItemProvider = new EncuestaItemProvider(this);
		}

		return encuestaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Respuesta} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RespuestaItemProvider respuestaItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Respuesta}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRespuestaAdapter() {
		if (respuestaItemProvider == null) {
			respuestaItemProvider = new RespuestaItemProvider(this);
		}

		return respuestaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Rol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RolItemProvider rolItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Rol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRolAdapter() {
		if (rolItemProvider == null) {
			rolItemProvider = new RolItemProvider(this);
		}

		return rolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.RedSocial} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RedSocialItemProvider redSocialItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.RedSocial}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRedSocialAdapter() {
		if (redSocialItemProvider == null) {
			redSocialItemProvider = new RedSocialItemProvider(this);
		}

		return redSocialItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.ContenidoMultimedia} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContenidoMultimediaItemProvider contenidoMultimediaItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.ContenidoMultimedia}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContenidoMultimediaAdapter() {
		if (contenidoMultimediaItemProvider == null) {
			contenidoMultimediaItemProvider = new ContenidoMultimediaItemProvider(this);
		}

		return contenidoMultimediaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.Index} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndexItemProvider indexItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.Index}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndexAdapter() {
		if (indexItemProvider == null) {
			indexItemProvider = new IndexItemProvider(this);
		}

		return indexItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dataweb.CRUD} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CRUDItemProvider crudItemProvider;

	/**
	 * This creates an adapter for a {@link dataweb.CRUD}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCRUDAdapter() {
		if (crudItemProvider == null) {
			crudItemProvider = new CRUDItemProvider(this);
		}

		return crudItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (aplicacionItemProvider != null) aplicacionItemProvider.dispose();
		if (baseDatosItemProvider != null) baseDatosItemProvider.dispose();
		if (entidadItemProvider != null) entidadItemProvider.dispose();
		if (atributoItemProvider != null) atributoItemProvider.dispose();
		if (crearInstanciaItemProvider != null) crearInstanciaItemProvider.dispose();
		if (indiceExtendidoItemProvider != null) indiceExtendidoItemProvider.dispose();
		if (detallesInstanciaItemProvider != null) detallesInstanciaItemProvider.dispose();
		if (actualizacionInstanciaItemProvider != null) actualizacionInstanciaItemProvider.dispose();
		if (indiceEntidadItemProvider != null) indiceEntidadItemProvider.dispose();
		if (indiceDetalleItemProvider != null) indiceDetalleItemProvider.dispose();
		if (borradoInstanciaItemProvider != null) borradoInstanciaItemProvider.dispose();
		if (cuestionarioItemProvider != null) cuestionarioItemProvider.dispose();
		if (preguntaItemProvider != null) preguntaItemProvider.dispose();
		if (normalItemProvider != null) normalItemProvider.dispose();
		if (encuestaItemProvider != null) encuestaItemProvider.dispose();
		if (respuestaItemProvider != null) respuestaItemProvider.dispose();
		if (rolItemProvider != null) rolItemProvider.dispose();
		if (redSocialItemProvider != null) redSocialItemProvider.dispose();
		if (contenidoMultimediaItemProvider != null) contenidoMultimediaItemProvider.dispose();
		if (indexItemProvider != null) indexItemProvider.dispose();
		if (crudItemProvider != null) crudItemProvider.dispose();
	}

}
